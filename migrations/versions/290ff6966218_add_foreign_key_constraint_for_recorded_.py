"""Add foreign key constraint for recorded_by_user

Revision ID: xyz123abc #<-- Will be different for you
Revises: 71059fc6d369
Create Date: ...

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'xyz123abc' #<-- Will be different for you
down_revision = '71059fc6d369'
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic ###
    with op.batch_alter_table('exam_absence', schema=None) as batch_op:
        batch_op.create_foreign_key(
            "fk_exam_absence_recorded_by_user", # <-- Use the same name again
            'user',
            ['recorded_by_user_id'],
            ['id']
        )
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic ###
    with op.batch_alter_table('exam_absence', schema=None) as batch_op:
        batch_op.drop_constraint(
             "fk_exam_absence_recorded_by_user", # <-- Use the same name again
             type_='foreignkey'
        )
    # ### end Alembic commands ###
# """Add foreign key constraint for recorded_by_user
#
# Revision ID: 290ff6966218
# Revises: 71059fc6d369
# Create Date: 2025-04-30 17:13:33.340486
#
# """
# from alembic import op
# import sqlalchemy as sa
#
#
# # revision identifiers, used by Alembic.
# revision = '290ff6966218'
# down_revision = '71059fc6d369'
# branch_labels = None
# depends_on = None
#
#
# def upgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_table('user')
#     # ### end Alembic commands ###
#
#
# def downgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.create_table('user',
#     sa.Column('id', sa.INTEGER(), nullable=False),
#     sa.Column('username', sa.VARCHAR(length=64), nullable=False),
#     sa.Column('password_hash', sa.VARCHAR(length=256), nullable=True),
#     sa.Column('is_admin', sa.BOOLEAN(), nullable=True),
#     sa.PrimaryKeyConstraint('id')
#     )
#     # ### end Alembic commands ###
